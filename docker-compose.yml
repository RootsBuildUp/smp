version: "3.3"  # optional since v1.27.0
services:
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      - kafka-net
  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "user-events"
    depends_on:
      - zookeeper
    networks:
      - kafka-net
  redis-server:
    container_name: redis
    image: 'redis'
    ports:
      - "6379:6379"
  db:
    image: postgres
    container_name: db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=123456
      - POSTGRES_DB=smp
    ports:
      - 5432:5432
  core-module:
    image: core-module
    build: ./core-module
    links:
      - redis-server
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=123456
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/smp
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=123456
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - KAFKA_CLUSTERS_0_NAME= local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS= kafka:9092
      - KAFKA_CLUSTERS_0_ZOOKEEPER= zookeeper:2181
    ports:
      - 8081:8081
    depends_on:
      - kafka
      - redis-server
      - db
  notification-module:
    image: notification-module
    build: ./notification-module
    ports:
      - 8082:8082
    depends_on:
      - kafka
      - core-module

networks:
  kafka-net:
    driver: bridge
